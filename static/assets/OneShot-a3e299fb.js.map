{"version":3,"file":"OneShot-a3e299fb.js","sources":["../../frontend/src/components/Answer/AnswerError.tsx","../../frontend/src/components/Example/Example.tsx","../../frontend/src/components/Example/ExampleList.tsx","../../frontend/src/components/SettingsButton/SettingsButton.tsx","../../frontend/src/pages/oneshot/OneShot.tsx"],"sourcesContent":["import { Stack, PrimaryButton } from \"@fluentui/react\";\r\nimport { ErrorCircle24Regular } from \"@fluentui/react-icons\";\r\n\r\nimport styles from \"./Answer.module.css\";\r\n\r\ninterface Props {\r\n    error: string;\r\n    onRetry: () => void;\r\n}\r\n\r\nexport const AnswerError = ({ error, onRetry }: Props) => {\r\n    return (\r\n        <Stack className={styles.answerContainer} verticalAlign=\"space-between\">\r\n            <ErrorCircle24Regular aria-hidden=\"true\" aria-label=\"Error icon\" primaryFill=\"red\" />\r\n\r\n            <Stack.Item grow>\r\n                <p className={styles.answerText}>{error}</p>\r\n            </Stack.Item>\r\n\r\n            <PrimaryButton className={styles.retryButton} onClick={onRetry} text=\"Retry\" />\r\n        </Stack>\r\n    );\r\n};\r\n","import styles from \"./Example.module.css\";\r\n\r\ninterface Props {\r\n    text: string;\r\n    value: string;\r\n    onClick: (value: string) => void;\r\n}\r\n\r\nexport const Example = ({ text, value, onClick }: Props) => {\r\n    return (\r\n        <div className={styles.example} onClick={() => onClick(value)}>\r\n            <p className={styles.exampleText}>{text}</p>\r\n        </div>\r\n    );\r\n};\r\n","import { Example } from \"./Example\";\r\n\r\nimport styles from \"./Example.module.css\";\r\n\r\nexport type ExampleModel = {\r\n    text: string;\r\n    value: string;\r\n};\r\n\r\nconst EXAMPLES: ExampleModel[] = [\r\n    {\r\n        text: \"What is included in my Northwind Health Plus plan that is not in standard?\",\r\n        value: \"What is included in my Northwind Health Plus plan that is not in standard?\"\r\n    },\r\n    { text: \"What happens in a performance review?\", value: \"What happens in a performance review?\" },\r\n    { text: \"What does a Product Manager do?\", value: \"What does a Product Manager do?\" }\r\n];\r\n\r\ninterface Props {\r\n    onExampleClicked: (value: string) => void;\r\n}\r\n\r\nexport const ExampleList = ({ onExampleClicked }: Props) => {\r\n    return (\r\n        <ul className={styles.examplesNavList}>\r\n            {EXAMPLES.map((x, i) => (\r\n                <li key={i}>\r\n                    <Example text={x.text} value={x.value} onClick={onExampleClicked} />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n","import { Text } from \"@fluentui/react\";\r\nimport { Settings24Regular } from \"@fluentui/react-icons\";\r\n\r\nimport styles from \"./SettingsButton.module.css\";\r\n\r\ninterface Props {\r\n    className?: string;\r\n    onClick: () => void;\r\n}\r\n\r\nexport const SettingsButton = ({ className, onClick }: Props) => {\r\n    return (\r\n        <div className={`${styles.container} ${className ?? \"\"}`} onClick={onClick}>\r\n            <Settings24Regular />\r\n            <Text>{\"Developer settings\"}</Text>\r\n        </div>\r\n    );\r\n};\r\n","import { useRef, useState } from \"react\";\r\nimport { Checkbox, ChoiceGroup, IChoiceGroupOption, Panel, DefaultButton, Spinner, TextField, SpinButton, IDropdownOption, Dropdown } from \"@fluentui/react\";\r\n\r\nimport styles from \"./OneShot.module.css\";\r\n\r\nimport { askApi, Approaches, AskResponse, AskRequest, RetrievalMode } from \"../../api\";\r\nimport { Answer, AnswerError } from \"../../components/Answer\";\r\nimport { QuestionInput } from \"../../components/QuestionInput\";\r\nimport { ExampleList } from \"../../components/Example\";\r\nimport { AnalysisPanel, AnalysisPanelTabs } from \"../../components/AnalysisPanel\";\r\nimport { SettingsButton } from \"../../components/SettingsButton/SettingsButton\";\r\n\r\nexport function Component(): JSX.Element {\r\n    const [isConfigPanelOpen, setIsConfigPanelOpen] = useState(false);\r\n    const [approach, setApproach] = useState<Approaches>(Approaches.RetrieveThenRead);\r\n    const [promptTemplate, setPromptTemplate] = useState<string>(\"\");\r\n    const [promptTemplatePrefix, setPromptTemplatePrefix] = useState<string>(\"\");\r\n    const [promptTemplateSuffix, setPromptTemplateSuffix] = useState<string>(\"\");\r\n    const [retrievalMode, setRetrievalMode] = useState<RetrievalMode>(RetrievalMode.Hybrid);\r\n    const [retrieveCount, setRetrieveCount] = useState<number>(3);\r\n    const [useSemanticRanker, setUseSemanticRanker] = useState<boolean>(true);\r\n    const [useSemanticCaptions, setUseSemanticCaptions] = useState<boolean>(false);\r\n    const [excludeCategory, setExcludeCategory] = useState<string>(\"\");\r\n\r\n    const lastQuestionRef = useRef<string>(\"\");\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<unknown>();\r\n    const [answer, setAnswer] = useState<AskResponse>();\r\n\r\n    const [activeCitation, setActiveCitation] = useState<string>();\r\n    const [activeAnalysisPanelTab, setActiveAnalysisPanelTab] = useState<AnalysisPanelTabs | undefined>(undefined);\r\n\r\n    const makeApiRequest = async (question: string) => {\r\n        lastQuestionRef.current = question;\r\n\r\n        error && setError(undefined);\r\n        setIsLoading(true);\r\n        setActiveCitation(undefined);\r\n        setActiveAnalysisPanelTab(undefined);\r\n\r\n        try {\r\n            const request: AskRequest = {\r\n                question,\r\n                approach,\r\n                overrides: {\r\n                    promptTemplate: promptTemplate.length === 0 ? undefined : promptTemplate,\r\n                    promptTemplatePrefix: promptTemplatePrefix.length === 0 ? undefined : promptTemplatePrefix,\r\n                    promptTemplateSuffix: promptTemplateSuffix.length === 0 ? undefined : promptTemplateSuffix,\r\n                    excludeCategory: excludeCategory.length === 0 ? undefined : excludeCategory,\r\n                    top: retrieveCount,\r\n                    retrievalMode: retrievalMode,\r\n                    semanticRanker: useSemanticRanker,\r\n                    semanticCaptions: useSemanticCaptions\r\n                }\r\n            };\r\n            const result = await askApi(request);\r\n            setAnswer(result);\r\n        } catch (e) {\r\n            setError(e);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const onPromptTemplateChange = (_ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n        setPromptTemplate(newValue || \"\");\r\n    };\r\n\r\n    const onPromptTemplatePrefixChange = (_ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n        setPromptTemplatePrefix(newValue || \"\");\r\n    };\r\n\r\n    const onPromptTemplateSuffixChange = (_ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n        setPromptTemplateSuffix(newValue || \"\");\r\n    };\r\n\r\n    const onRetrieveCountChange = (_ev?: React.SyntheticEvent<HTMLElement, Event>, newValue?: string) => {\r\n        setRetrieveCount(parseInt(newValue || \"3\"));\r\n    };\r\n\r\n    const onRetrievalModeChange = (_ev: React.FormEvent<HTMLDivElement>, option?: IDropdownOption<RetrievalMode> | undefined, index?: number | undefined) => {\r\n        setRetrievalMode(option?.data || RetrievalMode.Hybrid);\r\n    };\r\n\r\n    const onApproachChange = (_ev?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOption) => {\r\n        setApproach((option?.key as Approaches) || Approaches.RetrieveThenRead);\r\n    };\r\n\r\n    const onUseSemanticRankerChange = (_ev?: React.FormEvent<HTMLElement | HTMLInputElement>, checked?: boolean) => {\r\n        setUseSemanticRanker(!!checked);\r\n    };\r\n\r\n    const onUseSemanticCaptionsChange = (_ev?: React.FormEvent<HTMLElement | HTMLInputElement>, checked?: boolean) => {\r\n        setUseSemanticCaptions(!!checked);\r\n    };\r\n\r\n    const onExcludeCategoryChanged = (_ev?: React.FormEvent, newValue?: string) => {\r\n        setExcludeCategory(newValue || \"\");\r\n    };\r\n\r\n    const onExampleClicked = (example: string) => {\r\n        makeApiRequest(example);\r\n    };\r\n\r\n    const onShowCitation = (citation: string) => {\r\n        if (activeCitation === citation && activeAnalysisPanelTab === AnalysisPanelTabs.CitationTab) {\r\n            setActiveAnalysisPanelTab(undefined);\r\n        } else {\r\n            setActiveCitation(citation);\r\n            setActiveAnalysisPanelTab(AnalysisPanelTabs.CitationTab);\r\n        }\r\n    };\r\n\r\n    const onToggleTab = (tab: AnalysisPanelTabs) => {\r\n        if (activeAnalysisPanelTab === tab) {\r\n            setActiveAnalysisPanelTab(undefined);\r\n        } else {\r\n            setActiveAnalysisPanelTab(tab);\r\n        }\r\n    };\r\n\r\n    const approaches: IChoiceGroupOption[] = [\r\n        {\r\n            key: Approaches.RetrieveThenRead,\r\n            text: \"Retrieve-Then-Read\"\r\n        },\r\n        {\r\n            key: Approaches.ReadRetrieveRead,\r\n            text: \"Read-Retrieve-Read\"\r\n        },\r\n        {\r\n            key: Approaches.ReadDecomposeAsk,\r\n            text: \"Read-Decompose-Ask\"\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className={styles.oneshotContainer}>\r\n            <div className={styles.oneshotTopSection}>\r\n                <SettingsButton className={styles.settingsButton} onClick={() => setIsConfigPanelOpen(!isConfigPanelOpen)} />\r\n                <h1 className={styles.oneshotTitle}>Ask your data</h1>\r\n                <div className={styles.oneshotQuestionInput}>\r\n                    <QuestionInput\r\n                        placeholder=\"Example: Does my plan cover annual eye exams?\"\r\n                        disabled={isLoading}\r\n                        onSend={question => makeApiRequest(question)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={styles.oneshotBottomSection}>\r\n                {isLoading && <Spinner label=\"Generating answer\" />}\r\n                {!lastQuestionRef.current && <ExampleList onExampleClicked={onExampleClicked} />}\r\n                {!isLoading && answer && !error && (\r\n                    <div className={styles.oneshotAnswerContainer}>\r\n                        <Answer\r\n                            answer={answer}\r\n                            onLikeDislikeClicked={()=>{}}\r\n                            onCitationClicked={x => onShowCitation(x)}\r\n                            onThoughtProcessClicked={() => onToggleTab(AnalysisPanelTabs.ThoughtProcessTab)}\r\n                            onSupportingContentClicked={() => onToggleTab(AnalysisPanelTabs.SupportingContentTab)}\r\n                        />\r\n                    </div>\r\n                )}\r\n                {error ? (\r\n                    <div className={styles.oneshotAnswerContainer}>\r\n                        <AnswerError error={error.toString()} onRetry={() => makeApiRequest(lastQuestionRef.current)} />\r\n                    </div>\r\n                ) : null}\r\n                {activeAnalysisPanelTab && answer && (\r\n                    <AnalysisPanel\r\n                        className={styles.oneshotAnalysisPanel}\r\n                        activeCitation={activeCitation}\r\n                        onActiveTabChanged={x => onToggleTab(x)}\r\n                        citationHeight=\"600px\"\r\n                        answer={answer}\r\n                        activeTab={activeAnalysisPanelTab}\r\n                    />\r\n                )}\r\n            </div>\r\n\r\n            <Panel\r\n                headerText=\"Configure answer generation\"\r\n                isOpen={isConfigPanelOpen}\r\n                isBlocking={false}\r\n                onDismiss={() => setIsConfigPanelOpen(false)}\r\n                closeButtonAriaLabel=\"Close\"\r\n                onRenderFooterContent={() => <DefaultButton onClick={() => setIsConfigPanelOpen(false)}>Close</DefaultButton>}\r\n                isFooterAtBottom={true}\r\n            >\r\n                <ChoiceGroup\r\n                    className={styles.oneshotSettingsSeparator}\r\n                    label=\"Approach\"\r\n                    options={approaches}\r\n                    defaultSelectedKey={approach}\r\n                    onChange={onApproachChange}\r\n                />\r\n\r\n                {(approach === Approaches.RetrieveThenRead || approach === Approaches.ReadDecomposeAsk) && (\r\n                    <TextField\r\n                        className={styles.oneshotSettingsSeparator}\r\n                        defaultValue={promptTemplate}\r\n                        label=\"Override prompt template\"\r\n                        multiline\r\n                        autoAdjustHeight\r\n                        onChange={onPromptTemplateChange}\r\n                    />\r\n                )}\r\n\r\n                {approach === Approaches.ReadRetrieveRead && (\r\n                    <>\r\n                        <TextField\r\n                            className={styles.oneshotSettingsSeparator}\r\n                            defaultValue={promptTemplatePrefix}\r\n                            label=\"Override prompt prefix template\"\r\n                            multiline\r\n                            autoAdjustHeight\r\n                            onChange={onPromptTemplatePrefixChange}\r\n                        />\r\n                        <TextField\r\n                            className={styles.oneshotSettingsSeparator}\r\n                            defaultValue={promptTemplateSuffix}\r\n                            label=\"Override prompt suffix template\"\r\n                            multiline\r\n                            autoAdjustHeight\r\n                            onChange={onPromptTemplateSuffixChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n                <SpinButton\r\n                    className={styles.oneshotSettingsSeparator}\r\n                    label=\"Retrieve this many search results:\"\r\n                    min={1}\r\n                    max={50}\r\n                    defaultValue={retrieveCount.toString()}\r\n                    onChange={onRetrieveCountChange}\r\n                />\r\n                <TextField className={styles.oneshotSettingsSeparator} label=\"Exclude category\" onChange={onExcludeCategoryChanged} />\r\n                <Checkbox\r\n                    className={styles.oneshotSettingsSeparator}\r\n                    checked={useSemanticRanker}\r\n                    label=\"Use semantic ranker for retrieval\"\r\n                    onChange={onUseSemanticRankerChange}\r\n                />\r\n                <Checkbox\r\n                    className={styles.oneshotSettingsSeparator}\r\n                    checked={useSemanticCaptions}\r\n                    label=\"Use query-contextual summaries instead of whole documents\"\r\n                    onChange={onUseSemanticCaptionsChange}\r\n                    disabled={!useSemanticRanker}\r\n                />\r\n                <Dropdown\r\n                    className={styles.oneshotSettingsSeparator}\r\n                    label=\"Retrieval mode\"\r\n                    options={[\r\n                        { key: \"hybrid\", text: \"Vectors + Text (Hybrid)\", selected: retrievalMode == RetrievalMode.Hybrid, data: RetrievalMode.Hybrid },\r\n                        { key: \"vectors\", text: \"Vectors\", selected: retrievalMode == RetrievalMode.Vectors, data: RetrievalMode.Vectors },\r\n                        { key: \"text\", text: \"Text\", selected: retrievalMode == RetrievalMode.Text, data: RetrievalMode.Text }\r\n                    ]}\r\n                    required\r\n                    onChange={onRetrievalModeChange}\r\n                />\r\n            </Panel>\r\n        </div>\r\n    );\r\n}\r\n\r\nComponent.displayName = \"OneShot\";\r\n"],"names":["AnswerError","error","onRetry","Stack","styles","jsx","ErrorCircle24Regular","PrimaryButton","Example","text","value","onClick","EXAMPLES","ExampleList","onExampleClicked","x","SettingsButton","className","jsxs","Settings24Regular","Text","Component","isConfigPanelOpen","setIsConfigPanelOpen","useState","approach","setApproach","Approaches","promptTemplate","setPromptTemplate","promptTemplatePrefix","setPromptTemplatePrefix","promptTemplateSuffix","setPromptTemplateSuffix","retrievalMode","setRetrievalMode","RetrievalMode","retrieveCount","setRetrieveCount","useSemanticRanker","setUseSemanticRanker","useSemanticCaptions","setUseSemanticCaptions","excludeCategory","setExcludeCategory","lastQuestionRef","useRef","isLoading","setIsLoading","setError","answer","setAnswer","activeCitation","setActiveCitation","activeAnalysisPanelTab","setActiveAnalysisPanelTab","makeApiRequest","question","request","result","askApi","e","onPromptTemplateChange","_ev","newValue","onPromptTemplatePrefixChange","onPromptTemplateSuffixChange","onRetrieveCountChange","onRetrievalModeChange","option","index","onApproachChange","onUseSemanticRankerChange","checked","onUseSemanticCaptionsChange","onExcludeCategoryChanged","example","onShowCitation","citation","AnalysisPanelTabs","onToggleTab","tab","approaches","QuestionInput","Spinner","Answer","AnalysisPanel","Panel","DefaultButton","ChoiceGroup","TextField","Fragment","SpinButton","Checkbox","Dropdown"],"mappings":"uUAUO,MAAMA,GAAc,CAAC,CAAE,MAAAC,EAAO,QAAAC,YAE5BC,EAAM,CAAA,UAAWC,EAAO,gBAAiB,cAAc,gBACpD,SAAA,CAAAC,MAACC,IAAqB,cAAY,OAAO,aAAW,aAAa,YAAY,MAAM,EAElFD,EAAA,IAAAF,EAAM,KAAN,CAAW,KAAI,GACZ,SAACE,EAAA,IAAA,IAAA,CAAE,UAAWD,EAAO,WAAa,SAAAH,CAAM,CAAA,EAC5C,EAEAI,MAACE,IAAc,UAAWH,EAAO,YAAa,QAASF,EAAS,KAAK,QAAQ,CACjF,CAAA,CAAA,soBCZKM,GAAU,CAAC,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,WAE9B,MAAI,CAAA,UAAWP,EAAO,QAAS,QAAS,IAAMO,EAAQD,CAAK,EACxD,eAAC,IAAE,CAAA,UAAWN,EAAO,YAAc,WAAK,CAC5C,CAAA,ECHFQ,GAA2B,CAC7B,CACI,KAAM,6EACN,MAAO,4EACX,EACA,CAAE,KAAM,wCAAyC,MAAO,uCAAwC,EAChG,CAAE,KAAM,kCAAmC,MAAO,iCAAkC,CACxF,EAMaC,GAAc,CAAC,CAAE,iBAAAC,KAEtBT,EAAA,IAAC,KAAG,CAAA,UAAWD,EAAO,gBACjB,YAAS,IAAI,CAACW,EAAG,IACbV,EAAA,IAAA,KAAA,CACG,eAACG,GAAQ,CAAA,KAAMO,EAAE,KAAM,MAAOA,EAAE,MAAO,QAASD,CAAkB,CAAA,CAAA,EAD7D,CAET,CACH,CACL,CAAA,4CCpBKE,GAAiB,CAAC,CAAE,UAAAC,EAAW,QAAAN,KAEpCO,EAAA,KAAC,MAAI,CAAA,UAAW,GAAGd,GAAO,SAAS,IAAIa,GAAa,EAAE,GAAI,QAAAN,EACtD,SAAA,CAAAN,EAAA,IAACc,GAAkB,EAAA,EACnBd,EAAAA,IAACe,IAAM,SAAqB,oBAAA,CAAA,CAChC,CAAA,CAAA,ECHD,SAASC,IAAyB,CACrC,KAAM,CAACC,EAAmBC,CAAoB,EAAIC,WAAS,EAAK,EAC1D,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAAqBG,EAAW,gBAAgB,EAC1E,CAACC,EAAgBC,CAAiB,EAAIL,WAAiB,EAAE,EACzD,CAACM,EAAsBC,CAAuB,EAAIP,WAAiB,EAAE,EACrE,CAACQ,EAAsBC,CAAuB,EAAIT,WAAiB,EAAE,EACrE,CAACU,EAAeC,CAAgB,EAAIX,EAAAA,SAAwBY,EAAc,MAAM,EAChF,CAACC,EAAeC,CAAgB,EAAId,WAAiB,CAAC,EACtD,CAACe,EAAmBC,CAAoB,EAAIhB,WAAkB,EAAI,EAClE,CAACiB,EAAqBC,CAAsB,EAAIlB,WAAkB,EAAK,EACvE,CAACmB,EAAiBC,CAAkB,EAAIpB,WAAiB,EAAE,EAE3DqB,EAAkBC,SAAe,EAAE,EAEnC,CAACC,EAAWC,CAAY,EAAIxB,WAAkB,EAAK,EACnD,CAACvB,EAAOgD,CAAQ,EAAIzB,EAAkB,SAAA,EACtC,CAAC0B,EAAQC,CAAS,EAAI3B,EAAsB,SAAA,EAE5C,CAAC4B,EAAgBC,CAAiB,EAAI7B,EAAiB,SAAA,EACvD,CAAC8B,EAAwBC,CAAyB,EAAI/B,EAAAA,SAAwC,MAAS,EAEvGgC,EAAiB,MAAOC,GAAqB,CAC/CZ,EAAgB,QAAUY,EAE1BxD,GAASgD,EAAS,MAAS,EAC3BD,EAAa,EAAI,EACjBK,EAAkB,MAAS,EAC3BE,EAA0B,MAAS,EAE/B,GAAA,CACA,MAAMG,EAAsB,CACxB,SAAAD,EACA,SAAAhC,EACA,UAAW,CACP,eAAgBG,EAAe,SAAW,EAAI,OAAYA,EAC1D,qBAAsBE,EAAqB,SAAW,EAAI,OAAYA,EACtE,qBAAsBE,EAAqB,SAAW,EAAI,OAAYA,EACtE,gBAAiBW,EAAgB,SAAW,EAAI,OAAYA,EAC5D,IAAKN,EACL,cAAAH,EACA,eAAgBK,EAChB,iBAAkBE,CACtB,CAAA,EAEEkB,EAAS,MAAMC,GAAOF,CAAO,EACnCP,EAAUQ,CAAM,QACXE,EAAG,CACRZ,EAASY,CAAC,CAAA,QACZ,CACEb,EAAa,EAAK,CACtB,CAAA,EAGEc,EAAyB,CAACC,EAA+DC,IAAsB,CACjHnC,EAAkBmC,GAAY,EAAE,CAAA,EAG9BC,EAA+B,CAACF,EAA+DC,IAAsB,CACvHjC,EAAwBiC,GAAY,EAAE,CAAA,EAGpCE,EAA+B,CAACH,EAA+DC,IAAsB,CACvH/B,EAAwB+B,GAAY,EAAE,CAAA,EAGpCG,EAAwB,CAACJ,EAAgDC,IAAsB,CAChF1B,EAAA,SAAS0B,GAAY,GAAG,CAAC,CAAA,EAGxCI,EAAwB,CAACL,EAAsCM,EAAqDC,IAA+B,CACpInC,GAAAkC,GAAA,YAAAA,EAAQ,OAAQjC,EAAc,MAAM,CAAA,EAGnDmC,EAAmB,CAACR,EAAuDM,IAAgC,CAChG3C,GAAA2C,GAAA,YAAAA,EAAQ,MAAsB1C,EAAW,gBAAgB,CAAA,EAGpE6C,EAA4B,CAACT,EAAuDU,IAAsB,CACvFjC,EAAA,CAAC,CAACiC,CAAO,CAAA,EAG5BC,GAA8B,CAACX,EAAuDU,IAAsB,CACvF/B,EAAA,CAAC,CAAC+B,CAAO,CAAA,EAG9BE,GAA2B,CAACZ,EAAuBC,IAAsB,CAC3EpB,EAAmBoB,GAAY,EAAE,CAAA,EAG/BlD,GAAoB8D,GAAoB,CAC1CpB,EAAeoB,CAAO,CAAA,EAGpBC,GAAkBC,GAAqB,CACrC1B,IAAmB0B,GAAYxB,IAA2ByB,EAAkB,YAC5ExB,EAA0B,MAAS,GAEnCF,EAAkByB,CAAQ,EAC1BvB,EAA0BwB,EAAkB,WAAW,EAC3D,EAGEC,EAAeC,GAA2B,CAExC1B,EADAD,IAA2B2B,EACD,OAEAA,CAFS,CAGvC,EAGEC,GAAmC,CACrC,CACI,IAAKvD,EAAW,iBAChB,KAAM,oBACV,EACA,CACI,IAAKA,EAAW,iBAChB,KAAM,oBACV,EACA,CACI,IAAKA,EAAW,iBAChB,KAAM,oBACV,CAAA,EAGJ,OACKT,EAAAA,KAAA,MAAA,CAAI,UAAWd,EAAO,iBACnB,SAAA,CAACc,EAAA,KAAA,MAAA,CAAI,UAAWd,EAAO,kBACnB,SAAA,CAACC,EAAAA,IAAAW,GAAA,CAAe,UAAWZ,EAAO,eAAgB,QAAS,IAAMmB,EAAqB,CAACD,CAAiB,EAAG,EAC1GjB,EAAA,IAAA,KAAA,CAAG,UAAWD,EAAO,aAAc,SAAa,gBAAA,EAChDC,EAAA,IAAA,MAAA,CAAI,UAAWD,EAAO,qBACnB,SAAAC,EAAA,IAAC8E,GAAA,CACG,YAAY,gDACZ,SAAUpC,EACV,OAAoBU,GAAAD,EAAeC,CAAQ,CAAA,CAAA,EAEnD,CAAA,EACJ,EACCvC,EAAA,KAAA,MAAA,CAAI,UAAWd,EAAO,qBAClB,SAAA,CAAa2C,GAAA1C,EAAAA,IAAC+E,GAAQ,CAAA,MAAM,mBAAoB,CAAA,EAChD,CAACvC,EAAgB,SAAWxC,EAAAA,IAACQ,IAAY,iBAAAC,EAAoC,CAAA,EAC7E,CAACiC,GAAaG,GAAU,CAACjD,GACrBI,EAAA,IAAA,MAAA,CAAI,UAAWD,EAAO,uBACnB,SAAAC,EAAA,IAACgF,GAAA,CACG,OAAAnC,EACA,qBAAsB,IAAI,CAAC,EAC3B,kBAAwBnC,GAAA8D,GAAe9D,CAAC,EACxC,wBAAyB,IAAMiE,EAAYD,EAAkB,iBAAiB,EAC9E,2BAA4B,IAAMC,EAAYD,EAAkB,oBAAoB,CAAA,CAAA,EAE5F,EAEH9E,EACII,EAAAA,IAAA,MAAA,CAAI,UAAWD,EAAO,uBACnB,eAACJ,GAAY,CAAA,MAAOC,EAAM,WAAY,QAAS,IAAMuD,EAAeX,EAAgB,OAAO,CAAA,CAAG,CAClG,CAAA,EACA,KACHS,GAA0BJ,GACvB7C,EAAA,IAACiF,GAAA,CACG,UAAWlF,EAAO,qBAClB,eAAAgD,EACA,mBAAyBrC,GAAAiE,EAAYjE,CAAC,EACtC,eAAe,QACf,OAAAmC,EACA,UAAWI,CAAA,CACf,CAAA,EAER,EAEApC,EAAA,KAACqE,GAAA,CACG,WAAW,8BACX,OAAQjE,EACR,WAAY,GACZ,UAAW,IAAMC,EAAqB,EAAK,EAC3C,qBAAqB,QACrB,sBAAuB,IAAOlB,EAAAA,IAAAmF,GAAA,CAAc,QAAS,IAAMjE,EAAqB,EAAK,EAAG,SAAK,QAAA,EAC7F,iBAAkB,GAElB,SAAA,CAAAlB,EAAA,IAACoF,GAAA,CACG,UAAWrF,EAAO,yBAClB,MAAM,WACN,QAAS8E,GACT,mBAAoBzD,EACpB,SAAU8C,CAAA,CACd,GAEE9C,IAAaE,EAAW,kBAAoBF,IAAaE,EAAW,mBAClEtB,EAAA,IAACqF,EAAA,CACG,UAAWtF,EAAO,yBAClB,aAAcwB,EACd,MAAM,2BACN,UAAS,GACT,iBAAgB,GAChB,SAAUkC,CAAA,CACd,EAGHrC,IAAaE,EAAW,kBAEjBT,EAAA,KAAAyE,EAAA,SAAA,CAAA,SAAA,CAAAtF,EAAA,IAACqF,EAAA,CACG,UAAWtF,EAAO,yBAClB,aAAc0B,EACd,MAAM,kCACN,UAAS,GACT,iBAAgB,GAChB,SAAUmC,CAAA,CACd,EACA5D,EAAA,IAACqF,EAAA,CACG,UAAWtF,EAAO,yBAClB,aAAc4B,EACd,MAAM,kCACN,UAAS,GACT,iBAAgB,GAChB,SAAUkC,CAAA,CACd,CAAA,EACJ,EAGJ7D,EAAA,IAACuF,GAAA,CACG,UAAWxF,EAAO,yBAClB,MAAM,qCACN,IAAK,EACL,IAAK,GACL,aAAciC,EAAc,SAAS,EACrC,SAAU8B,CAAA,CACd,EACA9D,MAACqF,GAAU,UAAWtF,EAAO,yBAA0B,MAAM,mBAAmB,SAAUuE,GAA0B,EACpHtE,EAAA,IAACwF,EAAA,CACG,UAAWzF,EAAO,yBAClB,QAASmC,EACT,MAAM,oCACN,SAAUiC,CAAA,CACd,EACAnE,EAAA,IAACwF,EAAA,CACG,UAAWzF,EAAO,yBAClB,QAASqC,EACT,MAAM,4DACN,SAAUiC,GACV,SAAU,CAACnC,CAAA,CACf,EACAlC,EAAA,IAACyF,GAAA,CACG,UAAW1F,EAAO,yBAClB,MAAM,iBACN,QAAS,CACL,CAAE,IAAK,SAAU,KAAM,0BAA2B,SAAU8B,GAAiBE,EAAc,OAAQ,KAAMA,EAAc,MAAO,EAC9H,CAAE,IAAK,UAAW,KAAM,UAAW,SAAUF,GAAiBE,EAAc,QAAS,KAAMA,EAAc,OAAQ,EACjH,CAAE,IAAK,OAAQ,KAAM,OAAQ,SAAUF,GAAiBE,EAAc,KAAM,KAAMA,EAAc,IAAK,CACzG,EACA,SAAQ,GACR,SAAUgC,CAAA,CACd,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAER,CAEA/C,GAAU,YAAc"}